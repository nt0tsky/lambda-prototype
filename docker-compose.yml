version: "3.1"

services:
  lambda-zookeeper:
    container_name: lambda-zookeeper
    image: wurstmeister/zookeeper:latest
    restart: always
    ports:
      - 2181:2181

  lambda-kafka:
    container_name: lambda-kafka
    image: wurstmeister/kafka:latest
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: lambda-kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: lambda-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://lambda-kafka:9092
      KAFKA_CREATE_TOPICS: hit-consumer:3:1,hit-consumer-speed:3:1,hit-consumer-batch:3:1
    depends_on:
      - lambda-zookeeper

  lambda-redis:
    container_name: lambda-redis
    image: redis:6
    restart: always
    ports:
      - 6379:6379

  lambda-clickhouse:
    container_name: lambda-clickhouse
    image: lunalabsltd/clickhouse-server:21.7.2.7-arm
    restart: always
    ports:
      - 8123:8123
      - 9000:9000

  lambda-clickhouse-bulk:
    container_name: lambda-clickhouse-bulk
    image: nikepan/clickhouse-bulk:latest
    restart: always
    ports:
      - 8124:8124
    environment:
      - CLICKHOUSE_SERVERS=http://lambda-clickhouse:8123

  lambda-consumer:
    build:
      dockerfile: Dockerfile
      context: .
    restart: always
    environment:
      - BROKERS=lambda-kafka:9092
    deploy:
      mode: replicated
      replicas: 3
    command: ["yarn", "start:consumer"]
    depends_on:
      - lambda-kafka

  lambda-consumer-speed:
    build:
      dockerfile: Dockerfile
      context: .
    restart: always
    environment:
      - BROKERS=lambda-kafka:9092
      - REDIS_URL=lambda-redis:6379
    deploy:
      mode: replicated
      replicas: 3
    command: ["yarn", "start:consumer:speed"]
    depends_on:
      - lambda-kafka

  lambda-consumer-batch:
    build:
      dockerfile: Dockerfile
      context: .
    restart: always
    environment:
      - BROKERS=lambda-kafka:9092
      - REDIS_URL=lambda-redis:6379
      - CLICKHOUSE_URL=http://lambda-clickhouse-bulk:8124
    deploy:
      mode: replicated
      replicas: 3
    command: ["yarn", "start:consumer:batch"]
    depends_on:
      - lambda-kafka

  lambda-service:
    container_name: lambda-service
    build:
      dockerfile: Dockerfile
      context: .
    restart: always
    environment:
      - BROKERS=lambda-kafka:9092
      - REDIS_URL=lambda-redis:6379
      - PORT=6000
    ports:
      - 6000:6000
    command: [ "yarn", "start:service" ]
    depends_on:
      - lambda-kafka
